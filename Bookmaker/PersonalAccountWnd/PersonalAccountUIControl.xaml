<UserControl x:Class="Bookmaker.PersonalAccountWnd.PersonalAccountUIControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Bookmaker.PersonalAccountWnd"
             xmlns:lang = "clr-namespace:Bookmaker.Properties"
             xmlns:converters="clr-namespace:Bookmaker.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Name="wind">
    <UserControl.Resources>
        <converters:ByteArrayToImageConverter x:Key="ByteArrayToImageConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"></ColumnDefinition>
            <ColumnDefinition Width="2*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Column="0" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Image Name="Avatar" Source="{Binding ActiveUser.Avatar,Converter={StaticResource ByteArrayToImageConverter}}"/>
            <StackPanel Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" >
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="{x:Static lang:Resources.UserName}" FontSize="15"></TextBlock>
                    <TextBlock Text="{Binding ActiveUser.UserName}" Margin="15 0 0 0" FontSize="15"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="{x:Static lang:Resources.Cash}" FontSize="15"></TextBlock>
                    <TextBlock Text="{Binding ActiveUser.Cash}" Margin="15 0 0 0" FontSize="15"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="{x:Static lang:Resources.WinDefUndef}" FontSize="15"></TextBlock>
                    <TextBlock Margin="15 0 0 0" FontSize="15"><Run Text="{Binding ActiveUser.TotalWins, Mode=OneWay}"/>/<Run Text="{Binding ActiveUser.TotalDefeats, Mode=OneWay}"/>/<Run Text="{Binding ActiveUser.TotalUndefined, Mode=OneWay}"/>
                    </TextBlock>
                </StackPanel>
            </StackPanel>
        </Grid>

        <TabControl Grid.Column="1" Grid.RowSpan="2" BorderThickness="4 4 4 4" BorderBrush="{Binding ElementName=LogoutButton,Path=Background}">
            <TabControl.Background>
                <ImageBrush></ImageBrush>
            </TabControl.Background>
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Grid Name="Panel">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Panel" Property="Background" Value="LightSkyBlue" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Panel" Property="Background" Value="White" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="{x:Static lang:Resources.MakeABet}" Background="Black">
                <Grid Grid.Column="1" Grid.RowSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Border Grid.Column="0" Grid.ColumnSpan="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>

                            <Button Grid.Column="0" Command="{Binding AllMatchesCommand}" Content="{x:Static lang:Resources.All}"/>
                            <Button Grid.Column="1" Command="{Binding OnlyUFCMatchesCommand}">
                                <Image Source="{Binding UFCIcon}"/>
                            </Button>
                            <Button Grid.Column="2" Command="{Binding OnlyBasketBallMatchesCommand}">
                                <Image Source="{Binding BasketBallIcon}"/>
                            </Button>
                            <Button Grid.Column="3" Command="{Binding OnlySoccerMatchesCommand}">
                                <Image Source="{Binding SoccerIcon}"/>
                            </Button>
                            <DataGrid Grid.Row="1" Grid.ColumnSpan="4" x:Name="Matches" ItemsSource="{Binding UndefinedMatches}"
                  AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False" CanUserSortColumns="True"
                                      SelectionMode="Single">

                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{x:Static lang:Resources.Id}" Binding="{Binding Id}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{x:Static lang:Resources.StartDate}" Binding="{Binding StartDate}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{x:Static lang:Resources.MatchResult}" Binding="{Binding Result}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{x:Static lang:Resources.FirstTeam}" Binding="{Binding FirstTeam}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{x:Static lang:Resources.SecondTeam}" Binding="{Binding SecondTeam}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{x:Static lang:Resources.CoefficientOnFirstTeam}" Binding="{Binding CoefficientOnFirstTeam}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{x:Static lang:Resources.CoefficientOnSecondTeam}" Binding="{Binding CoefficientOnSecondTeam}"></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Border>
                    <Border Grid.Column="0" Grid.Row="1" BorderThickness="0 4 2 0" BorderBrush="{Binding ElementName=LogoutButton,Path=Background}">
                        <Grid Margin="20">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{x:Static lang:Resources.MakeABet}" VerticalAlignment="Top" HorizontalAlignment="Center"
                                       FontSize="20"></TextBlock>
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0">
                                    <TextBlock Text="{x:Static lang:Resources.Cash}" HorizontalAlignment="Center"></TextBlock>
                                    <TextBox Text="{Binding ActiveBet.Cash, UpdateSourceTrigger=PropertyChanged, 
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true,StringFormat=N2,Mode=TwoWay}"
                                 VerticalAlignment="Center"></TextBox>
                                </StackPanel>
                                <StackPanel Grid.Row="1">
                                    <TextBlock Text="{x:Static lang:Resources.BetOn}" HorizontalAlignment="Center"></TextBlock>
                                    <ComboBox SelectedValue="{Binding ActiveBet.BetOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                  ItemsSource="{Binding ActiveBet.MatchResults, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"></ComboBox>
                                </StackPanel>
                                <Button Grid.Row="2" Command="{Binding MakeABetCommand, UpdateSourceTrigger=PropertyChanged}" 
                    CommandParameter="{Binding ElementName=Matches, Path=SelectedItem}"  VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding CheckIcon}" Width="32"></Image>
                                        <TextBlock Text="{x:Static lang:Resources.MakeABet}"></TextBlock>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Grid>
                    </Border>
                    <Border Grid.Column="1" Grid.Row="1" BorderThickness="2 4 0 0" BorderBrush="{Binding ElementName=LogoutButton,Path=Background}">
                        <local:MatchPreview Grid.Column="1" Grid.Row="1" Margin="20" DataContext="{Binding ElementName=Matches, Path=SelectedItem}">
                        </local:MatchPreview>
                    </Border>

                </Grid>

            </TabItem>
            <TabItem Header="{x:Static lang:Resources.YourBets}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="32"></RowDefinition>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="UserBet" ItemsSource="{Binding ActiveUser.Bets}"
                  AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False"
                              SelectionMode="Single">

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static lang:Resources.Id}" Binding="{Binding Id}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.Cash}" Binding="{Binding Cash}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.BetOn}" Binding="{Binding BetOn}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.BetState}" Binding="{Binding BetState}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.DateOfBet}" Binding="{Binding DateOfBet}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.MatchId}" Binding="{Binding Match.Id}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.Match}" Binding="{Binding Match}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.MatchResult}" Binding="{Binding Match.Result}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.StartDate}" Binding="{Binding Match.StartDate}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.CoefficientOnFirstTeam}" Binding="{Binding Match.CoefficientOnFirstTeam}"></DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static lang:Resources.CoefficientOnSecondTeam}" Binding="{Binding Match.CoefficientOnSecondTeam}"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Grid.Row="1" Command="{Binding CancelBetCommand}" 
                                    CommandParameter="{Binding ElementName=UserBet,Path=SelectedItem}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding ReturnIcon}" Width="32"></Image>
                            <TextBlock Text="{x:Static lang:Resources.CancelBet}"></TextBlock>
                        </StackPanel>
                    </Button>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static lang:Resources.Matches}">
                <Border Grid.ColumnSpan="2" BorderThickness="0 0 0 4" BorderBrush="{Binding ElementName=LogoutButton,Path=Background}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <Button Grid.Column="0" Command="{Binding AllMatchesCommand}" Content="{x:Static lang:Resources.All}"/>
                        <Button Grid.Column="1" Command="{Binding OnlyUFCMatchesCommand}">
                            <Image Source="{Binding UFCIcon}"/>
                        </Button>
                        <Button Grid.Column="2" Command="{Binding OnlyBasketBallMatchesCommand}">
                            <Image Source="{Binding BasketBallIcon}"/>
                        </Button>
                        <Button Grid.Column="3" Command="{Binding OnlySoccerMatchesCommand}">
                            <Image Source="{Binding SoccerIcon}"/>
                        </Button>
                        <DataGrid Grid.Row="1" Grid.ColumnSpan="4" x:Name="AllMatches" ItemsSource="{Binding Matches}"
                                      AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False" CanUserSortColumns="True"
                                      SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static lang:Resources.Id}" Binding="{Binding Id}"></DataGridTextColumn>
                                <DataGridTextColumn Header="{x:Static lang:Resources.StartDate}" Binding="{Binding StartDate}"></DataGridTextColumn>
                                <DataGridTextColumn Header="{x:Static lang:Resources.MatchResult}" Binding="{Binding Result}"></DataGridTextColumn>
                                <DataGridTextColumn Header="{x:Static lang:Resources.FirstTeam}" Binding="{Binding FirstTeam}"></DataGridTextColumn>
                                <DataGridTextColumn Header="{x:Static lang:Resources.SecondTeam}" Binding="{Binding SecondTeam}"></DataGridTextColumn>
                                <DataGridTextColumn Header="{x:Static lang:Resources.CoefficientOnFirstTeam}" Binding="{Binding CoefficientOnFirstTeam}"></DataGridTextColumn>
                                <DataGridTextColumn Header="{x:Static lang:Resources.CoefficientOnSecondTeam}" Binding="{Binding CoefficientOnSecondTeam}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="{x:Static lang:Resources.TeamsList}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Border Grid.ColumnSpan="2"  BorderThickness="0 0 2 2" BorderBrush="{Binding ElementName=LogoutButton,Path=Background}">
                        <DataGrid x:Name="Teams" ItemsSource="{Binding Teams}"
                                      AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False" CanUserSortColumns="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static lang:Resources.TeamName}" Binding="{Binding TeamName}"></DataGridTextColumn>
                                <DataGridTextColumn Header="{x:Static lang:Resources.WinRate}" Binding="{Binding WinRate}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    <Border Grid.Row="1"  BorderThickness="2 0 0 2" BorderBrush="{Binding ElementName=LogoutButton,Path=Background}">
                        <DataGrid DataContext="{Binding ElementName=Teams, Path=SelectedItem}" ItemsSource="{Binding Contracts}" AutoGenerateColumns="False"
                                  CanUserAddRows="False" SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static lang:Resources.MatchId}" Binding="{Binding Match.Id}" ></DataGridTextColumn>
                                <DataGridTextColumn Header="{x:Static lang:Resources.Match}" Binding="{Binding Match}" ></DataGridTextColumn>
                                <DataGridTextColumn Header="{x:Static lang:Resources.MatchResult}" Binding="{Binding Match.Result}" ></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    <Border Grid.Row="1" Grid.Column="1" BorderThickness="2 2 0 0" BorderBrush="{Binding ElementName=LogoutButton,Path=Background}">
                        <Grid Margin="20">
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="20" Text="{x:Static lang:Resources.Logotype}"></TextBlock>
                            <Image DataContext="{Binding ElementName=Teams, Path=SelectedItem}" 
                                   Source="{Binding Logotype,Converter={StaticResource ByteArrayToImageConverter}}"></Image>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>

        <StackPanel Grid.Row="1">
            <Button Command="{Binding RefreshCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding RefreshIcon}" Width="32"></Image>
                    <TextBlock Text="{x:Static lang:Resources.Refresh}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Command="{Binding GoToPutMoneyUIViewCommand}" CommandParameter="{Binding ActiveUser}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding WalletIcon}" Width="32"></Image>
                    <TextBlock Text="{x:Static lang:Resources.PutOutputMoney}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Command="{Binding GoToUserDataUIViewCommand}" CommandParameter="{Binding ActiveUser}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding PersonalIcon}" Width="32"></Image>
                    <TextBlock Text="{x:Static lang:Resources.UserData}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Command="{Binding GoToSettingsUIViewCommand}" CommandParameter="{Binding ActiveUser}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding SettingIcon}" Width="32"></Image>
                    <TextBlock Text="{x:Static lang:Resources.Settings}"></TextBlock>
                </StackPanel>
            </Button>
            <Button x:Name="LogoutButton" Command="{Binding LogOutCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding DoorIcon}" Width="32"></Image>
                    <TextBlock Text="{x:Static lang:Resources.Logout}"></TextBlock>
                </StackPanel>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
